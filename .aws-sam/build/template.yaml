Transform: AWS::Serverless-2016-10-31
Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Fn::Sub:
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: Api
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /planetas/{id}:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetPlaneta.Arn}/invocations
              responses: {}
          /planetas:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreatePlaneta.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      Cors:
        MaxAge: 5
  CreatePlaneta:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: CreatePlaneta
      CodeUri: CreatePlaneta
      Handler: index.handler
      Runtime: nodejs20.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Events:
        ApiPOSTplanetas:
          Type: Api
          Properties:
            Path: /planetas
            Method: POST
            RestApiId:
              Ref: Api
      Environment:
        Variables:
          PLANETAS_TABLE_NAME:
            Ref: planetas
          PLANETAS_TABLE_ARN:
            Fn::GetAtt:
            - planetas
            - Arn
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: planetas
    Metadata:
      SamResourceId: CreatePlaneta
  CreatePlanetaLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${CreatePlaneta}
  GetPlaneta:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: GetPlaneta
      CodeUri: GetPlaneta
      Handler: index.handler
      Runtime: nodejs20.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Events:
        ApiGETplanetasid:
          Type: Api
          Properties:
            Path: /planetas/{id}
            Method: GET
            RestApiId:
              Ref: Api
      Environment:
        Variables:
          PLANETAS_TABLE_NAME:
            Ref: planetas
          PLANETAS_TABLE_ARN:
            Fn::GetAtt:
            - planetas
            - Arn
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: planetas
    Metadata:
      SamResourceId: GetPlaneta
  GetPlanetaLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${GetPlaneta}
  planetas:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
